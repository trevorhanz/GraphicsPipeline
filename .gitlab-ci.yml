stages:
  - build
  - analyze
  - test
  - deploy

.default_build:
  stage: build
  image: $REGISTRY_ROOT/ubuntu:20
  tags:
    - docker
  artifacts:
    paths:
      - build
    expire_in: 1 day

build_ubuntu_20:
  extends: .default_build
  image: $REGISTRY_ROOT/ubuntu:20
  script:
    - mkdir build
    - cd build
    - cmake -DGP_BUILD_EXAMPLES=ON -DGP_BUILD_TEST=ON ../
    - make

build_centos_7:
  extends: .default_build
  image: $REGISTRY_ROOT/centos:7
  script:
    - mkdir build
    - cd build
    - cmake3 -DGP_BUILD_EXAMPLES=ON ../
    - make

build_centos_8:
  extends: .default_build
  image: $REGISTRY_ROOT/centos:8
  script:
    - mkdir build
    - cd build
    - cmake -DGP_BUILD_EXAMPLES=ON ../
    - make

build_windows:
  extends: .default_build
  image: $REGISTRY_ROOT/windows:mingw
  script:
    - mkdir build
    - cd build
    - cmake -DGP_BUILD_EXAMPLES=ON -DCMAKE_TOOLCHAIN_FILE=../cmake/Modules/MinGW-W64.cmake ../
    - make

build_osx:
  extends: .default_build
  image: $REGISTRY_ROOT/macos
  script:
    - mkdir build
    - cd build
    - export OSXCROSS_HOST=x86_64-apple-darwin18
    - export OSXCROSS_TARGET=o64
    - export OSXCROSS_TARGET_DIR=/opt/osxcross/
    - export OSXCROSS_SDK=/opt/osxcross/SDK/MacOSX10.14.sdk/
    - cmake -DGP_BUILD_EXAMPLES=ON -DCMAKE_TOOLCHAIN_FILE=/opt/osxcross/toolchain.cmake ../
    - make

build_web:
  extends: .default_build
  image: $REGISTRY_ROOT/emscripten
  script:
    - mkdir build
    - cd build
    - cmake -DGP_BUILD_EXAMPLES=ON -DCMAKE_TOOLCHAIN_FILE=../cmake/Modules/Emscripten.cmake ../
    - make

build_android:
  extends: .default_build
  image: $REGISTRY_ROOT/android
  script:
    - mkdir build
    - cd build
    - >
       cmake 
       -DGP_BUILD_EXAMPLES=ON
       -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake 
       -DANDROID_ABI=x86 
       -DANDROID_NATIVE_API_LEVEL=28 
       ../
    - make

static_analysis:
  stage: analyze
  image: $REGISTRY_ROOT/ubuntu:20
  tags:
    - docker
  script:
    cppcheck --error-exitcode=1 ./
  allow_failure: true

unit_test:
  stage: test
  image: $REGISTRY_ROOT/ubuntu:20
  tags:
    - docker
  script:
    - xvfb-run -a ./build/tests/TestC --gtest_output=xml:ReportC.xml
    - xvfb-run -a ./build/tests/TestCPP --gtest_output=xml:ReportCPP.xml
    - ./build/tests/TestUtils --gtest_output=xml:ReportUtils.xml
  dependencies:
    - build_ubuntu_20
  artifacts:
    reports:
      junit:
        - ReportC.xml
        - ReportCPP.xml
        - ReportUtils.xml

pages:
  stage: deploy
  image: $REGISTRY_ROOT/emscripten
  tags:
    - docker
  script:
    - cd build
    - make gp-docs
    - mv docs/html/ ../public
    - find examples/ -name "*.html" | cpio -pdm ../public
    - find examples/ -name "*.js" | cpio -pdm ../public
    - find examples/ -name "*.wasm" | cpio -pdm ../public
  artifacts:
    paths:
      - public
  only:
    - master
  dependencies:
    - build_web
